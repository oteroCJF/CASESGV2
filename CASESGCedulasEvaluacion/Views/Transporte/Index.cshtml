@model CedulasEvaluacion.Entities.MCedula.ModelsIndex
@{
    var i = 0;
    var user = Convert.ToInt32((@User.Claims.ElementAt(2).Value).Contains("Evaluador"));
    ViewData["Title"] = "Listado de Cédulas del Servicio de Transporte para Servidores Públicos";
}

<div class="container-fluid">
    <div class="row">
        <section class="col-xl-10 connectedSortable">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">
                        Cedulas de Evaluación
                    </h3>
                </div>
                <div class="card-body" style="font-size: 14px;">
                    <p class="text-justify"><b>NOTA: </b> Para el estatus <b class="text-danger">Rechazado</b> debe seleccionar el ícono <i class="fad fa-pencil text-primary"></i> para editar el cuestionario y volver a enviarlo a la DAS con las correcciones solicitadas para su revisión.</p>
                    <table id="tblIncidencias" class="row-border" width="100%">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Estatus</th>
                                <th>Inmueble</th>
                                <th>Folio</th>
                                <th>Mes</th>
                                <th>Año</th>
                                @if (!(@User.Claims.ElementAt(2).Value).Contains("Evaluador"))
                                {
                                    <th>Validaciones</th>
                                }
                                <th>Actualizado el:</th>
                                <th>Acciones</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.cedulas)
                            {
                                i++;
                                <tr>

                                    <td>@i</td>
                                    <td class="@(item.Fondo.Replace("bg","text"))" style="font-weight: bold">@Html.DisplayFor(modelItem => item.Estatus)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Nombre)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Folio)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Mes)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Anio)</td>
                                    @if (!(@User.Claims.ElementAt(2).Value).Contains("Evaluador") &&
                                  (item.Estatus.Equals("En Trámite") || item.Estatus.Equals("Trámite de Pago") || item.Estatus.Equals("Enviada a DGPPT") || item.Estatus.Equals("Pagada")))
                                    {
                                        <td class="text-center">
                                            @if (item.MemoValidado == true)
                                            {
                                                <i class="fa-regular fa-check text-success mr-2" data-toggle="tooltip" title="Memorándum validado" data-placement="top"></i>
                                            }
                                            else
                                            {
                                                <i class="fa-regular fa-clipboard-check text-danger mr-2" data-toggle="tooltip" title="Memorándum pendiente de validar" data-placement="top"></i>
                                            }

                                            @if (item.CedulaValidada == true)
                                            {
                                                <i class="fa-regular fa-check text-success mr-2" data-toggle="tooltip" title="Cédula validada" data-placement="top"></i>
                                            }
                                            else
                                            {
                                                <i class="fa-regular fa-clipboard-check text-danger mr-2" data-toggle="tooltip" title="Cédula pendiente de validar" data-placement="top"></i>
                                            }

                                            @if (item.ActaFirmada == true)
                                            {
                                                <i class="fa-regular fa-file-check text-success" data-toggle="tooltip" title="Acta Entrega - Recepción" data-placement="top"></i>
                                            }
                                            else
                                            {
                                                <i class="fa-regular fa-file-xmark text-danger" data-toggle="tooltip" title="Acta Entrega - Recepción pendiente de validar" data-placement="top"></i>
                                            }
                                        </td>
                                    }
                                    else if (!(@User.Claims.ElementAt(2).Value).Contains("Evaluador") && !item.Estatus.Equals("En Trámite"))
                                    {
                                        @if (item.MemoValidado == true && item.CedulaValidada == true)
                                        {
                                            <td class="text-center">
                                                <i class="fa-regular fa-check text-success"></i>
                                                <i class="fa-regular fa-check text-success"></i>
                                            </td>
                                        }
                                        else
                                        {
                                            <td class="text-center">
                                                <i class="fa-regular fa-user-clock text-primary"></i>
                                            </td>
                                        }
                                    }
                                    <td>@item.FechaActualizacion.ToString("dd/MM/yyyy hh:mm tt")</td>
                                    <td>
                                        @if (!item.Estatus.Equals("En Proceso") && !(@User.Claims.ElementAt(2).Value).Contains("Evaluador"))
                                        {
                                            <a href="#" data-id="@item.Id" class="text-center btnRevision" data-toggle="tooltip" title="Revisar Cédula" data-placement="top">
                                                <i class="fad fa-eye text-success"></i>
                                            </a>
                                        }
                                        @if (item.Estatus.Equals("Rechazada") || item.Estatus.Equals("En Proceso") || !(@User.Claims.ElementAt(2).Value).Contains("Evaluador"))
                                        {
                                            <a href="#" data-id="@item.Id" class="text-center ml-2 btnCuestionario" data-toggle="tooltip" title="Modificar Cédula" data-placement="top">
                                                <i class="fad fa-pencil text-primary"></i>
                                            </a>
                                        }
                                        @if (item.Estatus.Equals("En Proceso"))
                                        {
                                            <a href="#" class="text-center ml-2 delete_cedula" data-id="@item.Id" data-folio="@item.Folio" data-toggle="tooltip" title="Eliminar Cédula" data-placement="top">
                                                <i class="fad fa-times text-danger"></i>
                                            </a>
                                        }
                                        @if (!item.Estatus.Equals("En Proceso"))
                                        {
                                            <a href="#" data-id="@item.Id" data-estatus="@item.Estatus" data-servicio="@item.ServicioId" data-inmueble="@item.InmuebleId" class="text-center pdf ml-2 btn_pdf" data-toggle="tooltip" title="Generar Cédula" data-placement="top">
                                                @if (item.Estatus.Equals("Autorizada") || item.Estatus.Equals("En Trámite"))
                                                {
                                                    <i class="fal fa-file-pdf text-success"></i>
                                                }
                                                else @if (item.Estatus.Equals("Rechazada"))
                                           {
                                            <i class="fal fa-file-pdf text-danger"></i>
                                        }
                                        else
                                        {
                                            <i class="fal fa-file-pdf text-primary"></i>
                                        }
                                            </a>
                                        }
                                        @if (!item.Estatus.Equals("En Proceso") && !item.Estatus.Equals("Enviado a DAS"))
                                        {
                                            <a href="#" data-id="@item.Id" class="text-center ml-2 btnSeguimiento" data-toggle="tooltip" title="Seguimiento a la Cédula" data-placement="top">
                                                <i class="fas fa-file-import text-primary"></i>
                                            </a>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </section>
        <section class="col-xl-2 connectedSortable">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">
                        Filtros de Búsqueda
                        <button id="recargarPagina" class="btn btn-success" data-toggle="tooltip" title="Reiniciar Filtros">
                            <i class="fa-regular fa-arrows-rotate"></i>
                        </button>
                    </h3>
                </div>
                <div class="card-body" style="font-size: 14px;">
                    <div class="row col-lg-12">
                        <div class="col-lg-12">
                            <b>Año:</b>
                            <a class="btn-sm bg-primary btnAnios float-right" data-target="#btnAnio" data-toggle="collapse">
                                <i class="fas fa-minus"></i>
                            </a>
                        </div>
                        @foreach (var an in Model.anios)
                        {
                            <div class="col-lg-12 show ml-3" id="btnAnio">
                                <label class="checkbox-inline">
                                    @if (Model.filtroAnios.Contains(an.Valor))
                                    {
                                        <input class="selectAnio" id="anio_@an.Valor" type="checkbox" data-toggle="toggle"
                                               data-on="<i class='fa fa-check' style='margin-top: -2px;'></i>"
                                               data-off="<i class='fa fa-times' style='margin-top: -2px;'></i>" data-size="mini"
                                               data-onstyle="success" data-offstyle="danger" data-style="ios" value="@an.Valor" checked> @an.Valor
                                        }
                                        else
                                        {
                                            <input class="selectAnio" id="anio_@an.Valor" type="checkbox" data-toggle="toggle"
                                                   data-on="<i class='fa fa-check' style='margin-top: -2px;'></i>"
                                                   data-off="<i class='fa fa-times' style='margin-top: -2px;'></i>" data-size="mini"
                                                   data-onstyle="success" data-offstyle="danger" data-style="ios" value="@an.Valor"> @an.Valor
                                            }
                                </label>
                            </div>
                        }
                    </div>
                    <div class="row col-lg-12 mt-2">
                        <div class="col-lg-12">
                            <b>Mes:</b>
                            <a class="btn-sm bg-primary btnMeses float-right" data-target="#btnMes" data-toggle="collapse">
                                <i class="fas fa-minus"></i>
                            </a>
                        </div>
                        @foreach (var an in Model.Meses)
                        {
                            <div class="col-lg-12 show ml-3"  id="btnMes">
                                <label class="checkbox-inline float-left">
                                    @if (Model.filtroMeses.Contains(an.Mes))
                                    {
                                        <input class="selectMes" id="mes_@an.Mes" type="checkbox" data-toggle="toggle"
                                               data-on="<i class='fa fa-check' style='margin-top: -2px;'></i>"
                                               data-off="<i class='fa fa-times' style='margin-top: -2px;'></i>" data-size="mini"
                                               data-onstyle="success" data-offstyle="danger" data-style="ios" value="@an.Mes" checked> @an.Mes
                                        }
                                        else
                                        {
                                            <input class="selectMes" id="mes_@an.Mes" type="checkbox" data-toggle="toggle"
                                                   data-on="<i class='fa fa-check' style='margin-top: -2px;'></i>"
                                                   data-off="<i class='fa fa-times' style='margin-top: -2px;'></i>" data-size="mini"
                                                   data-onstyle="success" data-offstyle="danger" data-style="ios" value="@an.Mes"> @an.Mes
                                            }
                                </label>
                            </div>
                        }
                    </div>
                    <div class="row col-lg-12 mt-2">
                        <div class="col-lg-12">
                            <b>Estatus:</b>
                            <a class="btn-sm bg-primary btnEstatuss float-right" data-target="#btnEstatus" data-toggle="collapse">
                                <i class="fas fa-minus"></i>
                            </a>
                        </div>
                        @foreach (var an in Model.festatus)
                        {
                            <div class="col-lg-12 show ml-3" id="btnEstatus">
                                <label class="checkbox-inline">
                                    @if (Model.filtroEstatus.Contains(an.Estatus))
                                    {
                                        <input class="selectEstatus" type="checkbox" data-toggle="toggle"
                                               data-on="<i class='fa fa-check' style='margin-top: -2px;'></i>"
                                               data-off="<i class='fa fa-times' style='margin-top: -2px;'></i>" data-size="mini"
                                               data-onstyle="success" data-offstyle="danger" data-style="ios" value="@an.Estatus" checked> @an.Estatus
                                        }
                                        else
                                        {
                                            <input class="selectEstatus" type="checkbox" data-toggle="toggle"
                                                   data-on="<i class='fa fa-check' style='margin-top: -2px;'></i>"
                                                   data-off="<i class='fa fa-times' style='margin-top: -2px;'></i>" data-size="mini"
                                                   data-onstyle="success" data-offstyle="danger" data-style="ios" value="@an.Estatus"> @an.Estatus
                                            }
                                </label>
                            </div>
                        }
                    </div>
                    <div class="row col-lg-12 mt-2">
                        <div class="col-lg-12">
                            <b>Administración:</b>
                            <a class="btn-sm bg-primary btnAdmins float-right" data-target="#btnAdmin" data-toggle="collapse">
                                <i class="fas fa-plus"></i>
                            </a>
                        </div>
                        @foreach (var an in Model.administraciones)
                        {
                            <div class="col-lg-12 collapse" id="btnAdmin" style="font-size: 12px;">
                                <label class="checkbox-inline">
                                    @if (Model.filtroAdmins.Contains(an.Id + ""))
                                    {
                                        <input class="selectAdmin" id="admin_@an.Nombre" type="checkbox" data-toggle="toggle"
                                               data-on="<i class='fa fa-check' style='margin-top: -2px;'></i>"
                                               data-off="<i class='fa fa-times' style='margin-top: -2px;'></i>" data-size="mini"
                                               data-onstyle="success" data-offstyle="danger" data-style="ios" value="@an.Id" checked> @an.Abreviacion
                                        }
                                        else
                                        {
                                            <input class="selectAdmin" id="admin_@an.Nombre" type="checkbox" data-toggle="toggle"
                                                   data-on="<i class='fa fa-check' style='margin-top: -2px;'></i>"
                                                   data-off="<i class='fa fa-times' style='margin-top: -2px;'></i>" data-size="mini"
                                                   data-onstyle="success" data-offstyle="danger" data-style="ios" value="@an.Id"> @an.Abreviacion
                                            }
                                </label>
                            </div>
                        }
                    </div>
                    <div class="row col-lg-12 mt-2" id="divInmuebles">
                        <div class="col-lg-12">
                            <b>Inmuebles:</b>
                            <a class="btn-sm bg-primary btnInmuebles float-right" data-target="#btnInmueble" data-toggle="collapse">
                                <i class="fas fa-plus"></i>
                            </a>
                        </div>
                        @foreach (var an in Model.inmuebles)
                        {
                            <div class="col-lg-12 collapse inm_@an.AdministracionId" id="btnInmueble" style="font-size: 12px;">
                                <label class="checkbox-inline">
                                    @if (Model.filtroInmuebles.Contains(an.Nombre))
                                    {
                                        <input class="selectInmueble" id="inm_@an.Nombre" type="checkbox" data-toggle="toggle"
                                               data-on="<i class='fa fa-check' style='margin-top: -2px;'></i>"
                                               data-off="<i class='fa fa-times' style='margin-top: -2px;'></i>" data-size="mini"
                                               data-onstyle="success" data-offstyle="danger" data-style="ios" value="@an.Nombre" checked> @an.Abreviacion
                                        }
                                        else
                                        {
                                            <input class="selectInmueble" id="inm_@an.Nombre" type="checkbox" data-toggle="toggle"
                                                   data-on="<i class='fa fa-check' style='margin-top: -2px;'></i>"
                                                   data-off="<i class='fa fa-times' style='margin-top: -2px;'></i>" data-size="mini"
                                                   data-onstyle="success" data-offstyle="danger" data-style="ios" value="@an.Nombre"> @an.Abreviacion
                                            }
                                </label>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </section>
    </div>
</div>

<style>
    .dataTables_filter {
        display: block;
    }
    #recargarPagina {
        cursor: pointer;
        font-size: 12px; /* Ajusta el tamaño de la fuente según tus necesidades */
        padding: 3px 6px;
        border-radius: 50px;
        transition: background-color 0.3s ease;
    }
  
</style>

@section Scripts{
    <script>
        $(function () {
            var model = @Html.Raw(Json.Serialize(@Model));
            var idUsuario = @User.Claims.ElementAt(0).Value;

            var anios = [];
            var meses = [];
            var est = [];
            var admin = [];
            var admin2 = [];
            var inmuebles = [];

            $('[data-toggle="tooltip"]').tooltip();

            localStorage.clear();

            $(".btnRevision").click(function () {
                window.location.href = "/transporte/revision/" + $(this).data('id') + "?Anio=" + anios + "&Mes=" + meses
                    + "&Estatus=" + est + "&administracion=" + admin + "&Inmueble=" + inmuebles;
            });

            $(".btnSeguimiento").click(function () {
                window.location.href = "/transporte/seguimiento/" + $(this).data('id') + "?Anio=" + anios + "&Mes=" + meses
                    + "&Estatus=" + est + "&administracion=" + admin + "&Inmueble=" + inmuebles;
            });

            $(".btnCuestionario").click(function () {
                window.location.href = "/transporte/evaluacion/" + $(this).data('id') + "?Anio=" + anios + "&Mes=" + meses
                    + "&Estatus=" + est + "&administracion=" + admin + "&Inmueble=" + inmuebles;
            });

            document.getElementById("recargarPagina").addEventListener("click", function () {
                location.reload();
            });
             /********************************** Filtros AJAX ***********************************/
                $('#tblIncidencias').DataTable({
                    dom: 'lBfrtip',
                    buttons: [
                        {
                            extend: 'excelHtml5',
                            title: 'Servicio de Transporte para Servidores Públicos - Listado de Oficios Capturados',
                            className: "btn-sm bg-cjf mr-1",
                        },
                        {
                            extend: 'pdfHtml5',
                            title: 'Servicio de Transporte para Servidores Públicos - Listado de Oficios Capturados',
                            className: "btn-sm bg-cjf mr-1"
                        },
                        {
                            extend: 'print',
                            title: 'Servicio de Transporte para Servidores Públicos - Listado de Oficios Capturados',
                            text: 'Imprimir',
                            className: "btn-sm bg-cjf mr-1"
                        },
                        /*{
                            extend: 'colvis',
                            text: 'Ocultar Columnas',
                            className: "bg-cjf"
                        }*/],
                    //"bFilter": false,
                    lengthMenu: [[25, 50, 100, -1], [25, 50, 100, "Todos"]],
                    responsive: true,
                    language: {
                        url: "//cdn.datatables.net/plug-ins/1.10.19/i18n/Spanish.json"
                    },
                });

                var table = $('#tblIncidencias').DataTable();

                $('.selectAnio').on('change', function () {
                    anios = [];
                    $(".selectAnio").each(function () {
                    var activo = $(this).parent().hasClass("off");
                    if (activo == false) {
                        anios.push($(this).val());
                    }
                });

                    var mergedVal = anios.join('|');
                    table.column(5).search(mergedVal, true).draw();
                });

                $('.selectMes').on('change', function () {
                    meses = [];
                    $(".selectMes").each(function () {
                    var activo = $(this).parent().hasClass("off");
                    if (activo == false) {
                        meses.push($(this).val());
                    }
                });
                    var mergedVal = meses.join('|');
                    table.column(4).search(mergedVal, true).draw();
                });

                $('.selectEstatus').on('change', function () {
                    est = [];
                    $(".selectEstatus").each(function () {
                    var activo = $(this).parent().hasClass("off");
                    if (activo == false) {
                        est.push($(this).val());
                    }
                });

                    var mergedVal = est.join('|').replace("&", "\\&").replace(/\s/g, "\\s");
                    table.column(1).search(mergedVal, true).draw();
                });

                $('.selectAdmin').on('change', function () {
                    admin = [];
                    admin2 = [];
                    $(".selectAdmin").each(function () {
                    var activo = $(this).parent().hasClass("off");
                    if (activo == false) {
                        admin.push($(this).val());
                    }
                    admin2.push($(this).val());
                });

                    for (let i = 0; i < admin2.length; i++) {
                        $(".inm_" + admin2[i]).hide();
                    }

                    if (!$("#divInmuebles > #btnInmueble").hasClass("show")) {
                        $(".btnInmuebles").trigger("click");
                    }

                    if (admin.length > 0) {
                        for (let i = 0; i < admin.length; i++) {
                            $(".inm_" + admin[i]).show();
                        }
                    } else {
                        for (let i = 0; i < admin2.length; i++) {
                            $(".inm_" + admin2[i]).show();
                        }
                    }

                });

                $('.selectInmueble').on('change', function () {
                    inmuebles = [];
                    $(".selectInmueble").each(function () {
                    var activo = $(this).parent().hasClass("off");
                    if (activo == false) {
                        inmuebles.push($(this).val());
                    }
                    });
                    var mergedVal = inmuebles.join('|').replace("&", "\\&").replace(/\s/g, "\\s");
                    table.column(2).search(mergedVal, true).draw();
                });

                $(".btnAnios").click(function () {
                    if ($(".btnAnios > i").hasClass("fas fa-plus")) {
                        $(".btnAnios > i").removeClass("fas fa-plus");
                        $(".btnAnios > i").addClass("fas fa-minus");
                    } else {
                        $(".btnAnios > i").removeClass("fas fa-minus");
                        $(".btnAnios > i").addClass("fas fa-plus");
                    }
                });

                $(".btnMeses").click(function () {
                    if ($(".btnMeses > i").hasClass("fas fa-plus")) {
                        $(".btnMeses > i").removeClass("fas fa-plus");
                        $(".btnMeses > i").addClass("fas fa-minus");
                    } else {
                        $(".btnMeses > i").removeClass("fas fa-minus");
                        $(".btnMeses > i").addClass("fas fa-plus");
                    }
                });

                $(".btnAdmins").click(function () {
                    if ($(".btnAdmins > i").hasClass("fas fa-plus")) {
                        $(".btnAdmins > i").removeClass("fas fa-plus");
                        $(".btnAdmins > i").addClass("fas fa-minus");
                    } else {
                        $(".btnAdmins > i").removeClass("fas fa-minus");
                        $(".btnAdmins > i").addClass("fas fa-plus");
                    }
                });

                $(".btnInmuebles").click(function () {
                    if ($(".btnInmuebles > i").hasClass("fas fa-plus")) {
                        $(".btnInmuebles > i").removeClass("fas fa-plus");
                        $(".btnInmuebles > i").addClass("fas fa-minus");
                    } else {
                        $(".btnInmuebles > i").removeClass("fas fa-minus");
                        $(".btnInmuebles > i").addClass("fas fa-plus");
                    }
                });

                $(".btnEstatuss").click(function () {
                    if ($(".btnEstatuss > i").hasClass("fas fa-plus")) {
                        $(".btnEstatuss > i").removeClass("fas fa-plus");
                        $(".btnEstatuss > i").addClass("fas fa-minus");
                    } else {
                        $(".btnEstatuss > i").removeClass("fas fa-minus");
                        $(".btnEstatuss > i").addClass("fas fa-plus");
                    }
                });

                if (model.filtroAnios != "") {
                    anios = [];
                    $(".selectAnio").each(function () {
                        var activo = $(this).parent().hasClass("off");
                        if (activo == false) {
                            anios.push($(this).val());
                        }
                    });

                    var mergedVal = anios.join('|');
                    table.column(5).search(mergedVal, true).draw();
                }

                if (model.filtroMeses!= "") {
                    meses = [];
                    $(".selectMes").each(function () {
                        var activo = $(this).parent().hasClass("off");
                        if (activo == false) {
                            meses.push($(this).val());
                        }
                    });
                    var mergedVal = meses.join('|');
                    table.column(4).search(mergedVal, true).draw();
                }

                if (model.filtroAdmins != "") {
                    admin = [];
                    admin2 = [];
                    $(".selectAdmin").each(function () {
                        var activo = $(this).parent().hasClass("off");
                        if (activo == false) {
                            admin.push($(this).val());
                        }
                        admin2.push($(this).val());
                    });

                    for (let i = 0; i < admin2.length; i++) {
                        $(".inm_" + admin2[i]).hide();
                    }

                    if (!$("#divInmuebles > #btnInmueble").hasClass("show")) {
                        $(".btnInmuebles").trigger("click");
                    }

                    if (admin.length > 0) {
                        for (let i = 0; i < admin.length; i++) {
                            $(".inm_" + admin[i]).show();
                        }
                    } else {
                        for (let i = 0; i < admin2.length; i++) {
                            $(".inm_" + admin2[i]).show();
                        }
                    }
                }

                if (model.filtroInmuebles != "") {
                    inmuebles = [];
                    $(".selectInmueble").each(function () {
                        var activo = $(this).parent().hasClass("off");
                        if (activo == false) {
                            inmuebles.push($(this).val());
                        }
                    });
                    console.log(inmuebles);
                    var mergedVal = inmuebles.join('|').replace("&", "\\&").replace(/\s/g, "\\s");
                    table.column(2).search(mergedVal, true).draw();
                }

                if (model.filtroEstatus != "") {
                    est = [];
                    $(".selectEstatus").each(function () {
                        var activo = $(this).parent().hasClass("off");
                        if (activo == false) {
                            est.push($(this).val());
                        }
                    });
                    console.log(est);
                    var mergedVal = est.join('|').replace("&", "\\&").replace(/\s/g, "\\s");
                    table.column(1).search(mergedVal, true).draw();
                }
            /********************************** FIN Filtro Ajax*********************************/

            function cuentaTramites() {
                var c = 0;
                for (var i = 0; i < model.length; i++) {
                    if (model[i].estatus == "En Trámite") {
                        return 1;
                    }
                }
            }

            $(document).on("click", ".delete_cedula", function () {
                var id = $(this).data("id");
                var folio = $(this).data("folio");

                Swal.fire({
                    'icon': 'warning',
                    'title': 'Servicio de Transporte de Personal',
                    'html': '¿Estás seguro de eliminar la cédula con folio: ' + folio + '?',
                    'confirmButtonColor': '#3085d6',
                    'cancelButtonColor': '#d33',
                    'confirmButtonText': 'Si, Eliminar Cédula',
                    'cancelButtonText': 'Cancelar',
                    'showCancelButton': true
                }).then(response => {
                    if (response.isConfirmed) {
                        axios.get("/transporte/eliminar/" + id).then(response => {
                            if (response.status == 200) {
                                Swal.fire({
                                    'title': 'Servicio de Transporte de Personal y Fauna Nociva',
                                    'html': 'La cédula fue eliminada con éxito.',
                                    'icon': 'success'
                                }).then(function () {
                                    window.location.reload();
                                });
                            }
                        }).catch(error => {
                            Swal.fire({
                                'title': 'Servicio de Transporte de Personal',
                                'html': 'No se eliminó la cédula fue eliminada. Contacte al administrador del sistema.',
                                'icon': 'error'
                            });
                        });
                    }
                });
            });

            $('.btn_pdf').click(function () {
                let id = $(this).data('id');
                let estatus = $(this).data('estatus');
                let inmueble = $(this).data('inmueble');
                if (estatus == 'Autorizada') {
                    Swal.fire({
                        'icon': 'info',
                        'title': 'Servicio de Transporte de Personal',
                        'html': '<p style="text-align: justify">La cédula de evaluación ya fue autorizada, no olvide firmarla electrónicamente y ' +
                            'posteriormente <strong>subirla en el sistema CASESGV2 en el apartado de "Seguimiento a la Cédula"</strong>, si tiene alguna duda por favor ' +
                            'comuníquese a la ext. 2574 o 2635. </p>'
                    }).then(function () {
                        firmaReviso(inmueble, id);
                    });
                } else {
                    firmaReviso(inmueble, id);
                }
            });


            function firmaReviso(inmueble, id) {
                var firmante = new Array();
                axios.get('/firmantes/verificaFirmante/Reviso/' + inmueble + '/' + model.servicioId+'/'+id).then(review => {
                    if (review.data == 0) {
                        Swal.fire({
                            'icon': 'warning',
                            'title': 'Servicio de Transporte de Personal',
                            'html': '<p style="text-align: justify;">Aún no captura al personal que se encarga de firmar el apartado <b>"Revisó"</b> dentró de la cédula de acuerdo al servicio de la administración/inmueble al que pertenece. ' +
                                'Por favor seleccione al personal que firmará dicho apartado, previo a la impresión.</p><div class="select2-purple col-lg-12" style="text-align: justify">' +
                                '<p class="font-weight-bold" style="font-size: 16px;">¿Quién revisa la cédula?:</p>' +
                                '<select class= "form-control select2bs4" data-dropdown-css-class="select2-purple" id = "usrReviso" > ' + obtieneFirmantes() + '</select >' +
                                '</div>',
                            'confirmButtonColor': '#3085d6',
                            'cancelButtonColor': '#d33',
                            'confirmButtonText': 'Registrar',
                            'cancelButtonText': 'Cancelar',
                            'showCancelButton': true
                        }).then(confirm => {
                            var user = $("#usrReviso").val();
                            var name = $("#usrReviso :selected").text();
                            if (user != "" && confirm.isConfirmed) {
                                Swal.fire({
                                    'icon': 'warning',
                                    'title': 'Servicio de Transporte de Personal',
                                    'html': '<p style="text-align: justify">Para confirmar que <b>' + name + '</b> firmará electrónicamente (FIREL) la cédula en el apartado <b>"Revisó"</b>, deberá escribir la palabra CONFIRMAR.</p>',
                                    'confirmButtonColor': '#3085d6',
                                    'cancelButtonColor': '#d33',
                                    'confirmButtonText': 'Guardar',
                                    'cancelButtonText': 'Cancelar',
                                    'showCancelButton': true,
                                    'input': 'text',
                                    'inputPlaceholder': 'Escribe la palabra CONFIRMAR'
                                }).then(confirma => {
                                    if (confirma.value == "CONFIRMAR") {
                                        axios.post('/firmantes/insertaFirmante', { InmuebleId: parseInt(inmueble), ServicioId: parseInt(model.servicioId), UsuarioId: parseInt(user), Tipo: "Reviso" }).then(revisa => {
                                            if (revisa.data != -1) {
                                                Swal.fire({
                                                    'icon': 'success',
                                                    'title': 'Servicio de Transporte de Personal',
                                                    'html': '<p style="text-align: justify">El encargado de <b>Revisar</b> la cédula se capturó correctamente. </p>'
                                                }).then(function () {
                                                    firmaSuperviso(inmueble, id);
                                                });
                                            }
                                        });
                                    }
                                });
                            } else {
                                Swal.fire({
                                    'icon': 'error',
                                    'title': 'Servicio de Transporte de Personal',
                                    'html': '<p style="text-align: justify">No es posible descargar la cédula si el nombre del encargado de <b>Revisar</b> la misma no está registrado. </p>'
                                })
                            }
                        });
                    } else {
                        firmaSuperviso(inmueble, id);
                    }
                }).catch(error => {
                    Swal.fire({
                        'icon': 'info',
                        'title': 'Servicio de Transporte de Personal',
                        'html': '<p style="text-align: justify">ubo un error al registrar a la persona que revisará la cédula. Por favor comuníquese a la ext. 2574 o 2635. </p>' + error
                    });
                });
            }

            function firmaSuperviso(inmueble, id) {
                var firmante = new Array();
                axios.get('/firmantes/verificaFirmante/Superviso/' + inmueble + '/' + model.servicioId+'/'+id).then(review => {
                    if (review.data == 0) {
                        Swal.fire({
                            'icon': 'warning',
                            'title': 'Servicio de Transporte de Personal',
                            'html': '<p style="text-align: justify;">Aún no captura al personal que se encarga de firmar el apartado <b>"Supervisó"</b> dentró de la cédula de acuerdo al servicio de la administración/inmueble al que pertenece. ' +
                                'Por favor seleccione al personal que firmará dicho apartado, previo a la impresión.</p><div class="select2-purple col-lg-12" style="text-align: justify">' +
                                '<p class="font-weight-bold" style="font-size: 16px;">¿Quién supervisa la cédula?:</p>' +
                                '<select class= "form-control select2bs4" data-dropdown-css-class="select2-purple" id = "usrSuperviso" > ' + obtieneFirmantes() + '</select >' +
                                '</div>',
                            'confirmButtonColor': '#3085d6',
                            'cancelButtonColor': '#d33',
                            'confirmButtonText': 'Registrar',
                            'cancelButtonText': 'Cancelar',
                            'showCancelButton': true
                        }).then(confirm => {
                            var user = $("#usrSuperviso").val();
                            var name = $("#usrSuperviso :selected").text();
                            if (user != "" && confirm.isConfirmed) {
                                Swal.fire({
                                    'icon': 'warning',
                                    'title': 'Servicio de Transporte de Personal',
                                    'html': '<p style="text-align: justify">Para confirmar que <b>' + name + '</b> firmará electrónicamente (FIREL) la cédula en el apartado <b>"Supervisó"</b>, deberá escribir la palabra CONFIRMAR.</p>',
                                    'confirmButtonColor': '#3085d6',
                                    'cancelButtonColor': '#d33',
                                    'confirmButtonText': 'Guardar',
                                    'cancelButtonText': 'Cancelar',
                                    'showCancelButton': true,
                                    'input': 'text',
                                    'inputPlaceholder': 'Escribe la palabra CONFIRMAR'
                                }).then(supervisa => {
                                    if (supervisa.value == "CONFIRMAR") {
                                        axios.post('/firmantes/insertaFirmante', { InmuebleId: parseInt(inmueble), ServicioId: parseInt(model.servicioId), UsuarioId: parseInt(user), Tipo: "Superviso" }).then(supervisa => {
                                            if (supervisa.data != -1) {
                                                Swal.fire({
                                                    'icon': 'success',
                                                    'title': 'Servicio de Transporte de Personal',
                                                    'html': '<p style="text-align: justify">El encargado de <b>Supervisar</b> la cédula se capturó correctamente. </p>'
                                                }).then(function () {
                                                    window.open('/cedula/transporte/' + model.servicioId + '/' + id, '_blank');
                                                });
                                            }
                                        });
                                    }
                                });
                            } else {
                                Swal.fire({
                                    'icon': 'error',
                                    'title': 'Servicio de Transporte de Personal',
                                    'html': '<p style="text-align: justify">No es posible descargar la cédula si el nombre del encargado de <b>Supervisar</b> la misma no está registrado. </p>'
                                })
                            }
                        });
                    } else {
                        window.open('/cedula/transporte/' + model.servicioId + '/' + id, '_blank');
                    }
                }).catch(error => {
                    Swal.fire({
                        'icon': 'info',
                        'title': 'Servicio de Transporte de Personal',
                        'html': '<p style="text-align: justify">Hubo un error al registrar a la persona que revisará la cédula. Por favor comuníquese a la ext. 2574 o 2635. </p>'
                    })
                });
            }

            /********************************** Funciones Adicionales *********************************/
            function obtieneFirmantes() {
                let reviso = "<option value=''>Seleccione un empleado</option>";
                $.ajax({
                    url: '/firmantes/obtieneFirmantes/' + idUsuario,
                    type: 'GET',
                    async: false,
                    success: function (json) {
                        json.forEach(function (usr) {
                            reviso += "<option value=" + usr.id + ">" + usr.nombreCompleto + "</option>"
                        });
                    },
                });
                return reviso;
            }

            /********************************** FIN Funciones Asincronas*********************************/

        });
    </script>
}

