@model CedulasEvaluacion.Entities.MCargasMasivas.CargasMasivas;
@{
    ViewData["Title"] = "Carga Masiva de Notas de Crédito";
}

<div class="container-fluid">
    <div class="row col-lg-12 mt-2 mb-3">
        <table class="table">
            <tr>
                <td data-toggle="tooltip" title="Año de la Carga MAsiva" data-placement="top"><strong>Año: </strong>@Model.Anio</td>
                <td data-toggle="tooltip" title="Servidor público que elaboró la carga masiva" data-placement="top"><strong>Elaborado: </strong>@Model.Usuario</td>
                <td data-toggle="tooltip" title="Tipo de archivos quer sera cargado masivamente:" data-placement="top"><strong>Tipo de Archivos a Cargar: </strong>@Model.TipoArchivo</td>
                <td data-toggle="tooltip" title="Estatus de la carga masiva" data-placement="top"><strong>Estatus: </strong>@Model.Estatus</td>
            </tr>
        </table>
    </div>
    <div class="row col-lg-12">
        <div class="col-lg-12">
            <div class="card card-default">
                <div class="card-header">
                    <h3 class="card-title"><small><em>Carga Masiva de Archivos @Model.TipoArchivo</em></small></h3>
                </div>
                <div class="card-body">
                    <div id="actions" class="row col-lg-12">
                        <div class="col-lg-6">
                            <div class="btn-group w-100">
                                <span class="btn btn-success col fileinput-button">
                                    <i class="fas fa-plus"></i>
                                    <span>Agregar Archivos</span>
                                </span>
                                <button type="submit" class="btn btn-primary col start">
                                    <i class="fas fa-upload"></i>
                                    <span>Iniciar Carga</span>
                                </button>
                                <button type="reset" class="btn btn-warning col cancel">
                                    <i class="fas fa-times-circle"></i>
                                    <span>Restablecer Carga</span>
                                </button>
                            </div>
                        </div>
                        <div class="col-lg-6 d-flex align-items-center">
                            <div class="fileupload-process w-100">
                                <div id="total-progress" class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0">
                                    <div class="progress-bar progress-bar-success" style="width:0%;" data-dz-uploadprogress></div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="table table-striped files" id="previews">
                        <div class="row col-lg-12">
                            <div id="template" class="row mt-4">
                                <div class="col-auto">
                                    <span class="preview"><img src="data:," alt="" data-dz-thumbnail /></span>
                                </div>
                                <div class="col d-flex align-items-center">
                                    <p class="mb-0">
                                        <span class="lead" data-dz-name></span>
                                        (<span data-dz-size></span>)
                                    </p>
                                    <strong class="error text-danger" data-dz-errormessage></strong>
                                </div>
                                <div class="col-4 d-flex align-items-center">
                                    <div class="progress progress-striped active w-100" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0">
                                        <div class="progress-bar progress-bar-success" style="width:0%;" data-dz-uploadprogress></div>
                                    </div>
                                </div>
                                <div class="col-auto d-flex align-items-center">
                                    <div class="btn-group">
                                        <button class="btn btn-primary start">
                                            <i class="fas fa-upload"></i>
                                            <span>Iniciar Carga</span>
                                        </button>
                                        <button data-dz-remove class="btn btn-warning cancel">
                                            <i class="fas fa-times-circle"></i>
                                            <span>Restablecer</span>
                                        </button>
                                        <button data-dz-remove class="btn btn-danger delete">
                                            <i class="fas fa-trash"></i>
                                            <span>Eliminar</span>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /.card -->
        </div>
    </div>
</div>

@section Scripts{
    <script>
        $(function () {
            var model = @Html.Raw(Json.Serialize(@Model));

            console.log(model);

            // DropzoneJS Demo Code Start
            Dropzone.autoDiscover = false

            // Get the template HTML and remove it from the doumenthe template HTML and remove it from the doument
            var previewNode = document.querySelector("#template")
            previewNode.id = ""
            var previewTemplate = previewNode.parentNode.innerHTML
            previewNode.parentNode.removeChild(previewNode)

            var myDropzone = new Dropzone(document.body, { // Make the whole body a dropzone
                url: "/cargasMasivas/insertaFactura", // Set the url
                maxFilesize: 300, //mb
                acceptedFiles: "."+model.tipoArchivo,
                init: function () {
                    this.on("sending", function (file, xhr, formData) {
                        formData.append("CargaMasivaId", model.id);
                        formData.append("ServicioId", 12);
                        formData.append("Tipo", "Factura");
                        formData.append("Xml", file);
                    });
                    this.on("error", function (errorMessage) {
                        Swal.fire({
                            'icon': 'error',
                            'title': 'Carga de Complementos',
                            'html': '<p style = "text-align: justify;">Se precargaron los archivos, sin embargo hay archivos que exceden el tamaño límite permitido.' +
                                ' Estos archivos <b>no serán enviados</b>.</p>'
                        });
                    });
                    this.on("complete", function (completeMessage) {
                        if (completeMessage.status != 'error') {
                            Swal.fire({
                                'icon': 'success',
                                'title': 'Carga de Complementos',
                                'html': 'Se cargaron los archivos correctamente.'
                            }).then(function () {
                                window.location.href = "/cargasMasivas/revisarCarga/"+model.id;
                            });
                        }
                    });
                },
                success: function (file) {
                    var preview = $(file.previewElement);
                    preview.addClass("dz-success text-success");
                    setTimeout(function () {
                        dz.removeFile(file);

                    }, 2000);

                },
                error: function (file,error) {
                    if (file && error) {
                        var msgEl = $(file.previewElement).find('.dz-error-message');
                        msgEl.text(error.message);
                        msgEl.show();
                        msgEl.css("opacity", 1);
                    }
                },
                thumbnailWidth: 80,
                thumbnailHeight: 80,
                parallelUploads: 20,
                previewTemplate: previewTemplate,
                autoQueue: false, // Make sure the files aren't queued until manually added
                previewsContainer: "#previews", // Define the container to display the previews
                clickable: ".fileinput-button" // Define the element that should be used as click trigger to select files.
            })

            myDropzone.on("addedfile", function (file) {
                //file.previewElement.querySelector(".tipoEntregable").value = file.name.split("_")[0];
                file.previewElement.querySelector(".start").onclick = function () {
                    myDropzone.enqueueFile(file)
                }
            })

            // Update the total progress bar
            myDropzone.on("totaluploadprogress", function (progress) {
                document.querySelector("#total-progress .progress-bar").style.width = progress + "%"
            })

            myDropzone.on("sending", function (file) {
                // Show the total progress bar when upload starts
                document.querySelector("#total-progress").style.opacity = "1"
                // And disable the start button
                file.previewElement.querySelector(".start").setAttribute("disabled", "disabled")
            })

            // Hide the total progress bar when nothing's uploading anymore
            myDropzone.on("queuecomplete", function (progress) {
                document.querySelector("#total-progress").style.opacity = "0"
            })

            // Setup the buttons for all transfers
            // The "add files" button doesn't need to be setup because the config
            // `clickable` has already been specified.
            document.querySelector("#actions .start").onclick = function () {
                myDropzone.enqueueFiles(myDropzone.getFilesWithStatus(Dropzone.ADDED))
            }
            document.querySelector("#actions .cancel").onclick = function () {
                myDropzone.removeAllFiles(true)
            }
            // DropzoneJS Demo Code End
        })
    </script>
}

